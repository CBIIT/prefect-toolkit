# Welcome to your prefect.yaml file! You can use this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: s3-Prefect-Workflow
prefect-version: 2.13.0

# build section allows you to manage and build docker images
build: null

# push section allows you to manage if and how this project is uploaded to remote locations
push: null

# pull section allows you to provide instructions for cloning this project in remote locations

pull:
  - prefect.deployments.steps.git_clone:
      id: clone-step
      repository: https://github.com/CBIIT/prefect-toolkit.git
      branch: CRDCDH-1415-dbgap_validation
      include_submodules: True
  - prefect.deployments.steps.pip_install_requirements:
      requirements_file: requirements.txt
      directory: "{{ clone-step.directory }}"
      stream_output: False

# the deployments section allows you to provide configuration for deploying flows
deployments:
  - name: get-secrets
    version: null
    tags: ["TEST"]
    description: null
    entrypoint: workflow/crdcdh/dbgap_validation.py:get_secret_from_aws
    schedule: null

    # flow-specific parameters
    parameters:

    pull:
      - prefect.deployments.steps.git_clone:
          id: clone-step
          repository: https://github.com/CBIIT/prefect-toolkit.git
          branch: CRDCDH-1415-dbgap_validation
          include_submodules: True
      - prefect.deployments.steps.pip_install_requirements:
          requirements_file: requirements.txt
          directory: "{{ clone-step.directory }}"
          stream_output: False

    # infra-specific fields
    work_pool:
      name: crdc-dh-dev-validation-ecs
      work_queue_name: null
      job_variables: {}
